{
    "pro_details":[
        { "id":2,"pro_id":2,"script":[],"style":[],"js":"var select=new MSFmultiSelect(document.querySelector('#multiselect'),{ onChange:function(checked,value,instance){ console.log(checked,value,instance); }, selectAll:true, appendTo:'#myselect', height:40, width:350 }); function gotoDemo(goto){ var b=document.querySelector('#backtoread'); b.style.display=''; b.href='#'+goto; } function backtoRead(){ var b=document.querySelector('#backtoread'); b.style.display='none'; }","css":".sf-demo { overflow: initial !important; }","tutorial":[
            { "title":"Example","type":"demo","content":"<div id=\"_demo\"><h1 align='center'>Multi Select</h1><div class='row'><div class='col-md-4'></div><div class='col-md-8'><div id='myselect'><select id='multiselect' name='countries[]' multiple='multiple'><option value='1' selected>Iceland</option><option value='2' selected>Indonesia</option><option value='3' selected>India</option><option value='4'>Iran</option><option value='5'>Iraq</option><option value='6'>Ireland</option><option value='7'>Isle of Man</option><option value='8'>Israel</option></select></div></div><div class='col-md-4'><mark><a id=\"backtoread\" onclick=\"backtoRead();\" style=\"display:none\">#backtoRead</a></mark></div></div></div>" },
            { "title":"HTML","type":"code","file":"html","content":"<script src=\"MSFmultiSelect.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"MSFmultiSelect.css\"/>\n<div id='myselect'>\n <select id='multiselect' name='countries[]' multiple='multiple'>\n  <option value='1' selected='selected'>Iceland</option>\n  <option value='2' selected='selected'>Indonesia</option>\n  <option value='3' selected='selected'>India</option>\n  <option value='4'>Iran</option>\n  <option value='5'>Iraq</option>\n  <option value='6'>Ireland</option>\n  <option value='7'>Isle of Man</option>\n  <option value='8'>Israel</option>\n </select>\n</div>" },
            { "title":"JavaScript","type":"code","file":"js","content":"var select = new MSFmultiSelect(\n document.querySelector('#multiselect'),\n { \n  onChange:function(checked,value,instance){\n   console.log(checked,value,instance); \n  },\n  selectAll:true,\n  appendTo:'#myselect' \n } \n);" },
            { "title":"Syntax (arguments)","type":"syntax","content":"new MSFmultiSelect(element)\nnew MSFmultiSelect(element,settings)\n\nelement = document.getElementById('multiselect')\nsettings = { \n width:350,\n height:40,\n className:'myclass',\n onChange:function(checked,value,instance){\n  console.log(checked,value,instance);\n },\n selectAll:true,\n appendTo:'#myselect',\n readOnly:true\n}" },
            { "title":"element","type":"text","content":"Give DOM select element, this element posted in your backend." },
            { "title":"settings (Optional)","type":"html","content":"Give the object of settings your mulitiselect.<ol type=\"1\"><li><b>appendTo</b> : give element selector string, it uses to target place to create multiselect.</li><li><b>width</b> : It is control of the mulitiselect width.</li><li><b>height</b> : It is control of the mulitiselect height.</li><li><b>className</b> : if you need any custom style, give css class name, it will apply to mulitiselect.</li><li><b>onChange</b> : when it changed, this callback function, there is three-parameter in this function.<ol type=\"i\"><li><b>checked</b> : you receive boolean data, selected item checked, or unchecked.</li><li><b>value</b> : you get selected item value.</li><li><b>instance</b> : it's instance variable of mulitiselect, you can access multiselect properties and methods.</li></ol></li><li><b>selectAll</b> : if you give true value, select all options to enable.</li><li><b>readOnly</b> : if you give true value, the user can not modify multiselect options.</li></ol>" },
            { "title":"MSFmultiSelect Methods","type":"html","content":"<dl><dt><code>MSFmultiSelect.setValue(sellectedValues)</code></dt><dd>This method used to add selected values, this method needs one argument, that argument value has select option values in an array format.<ul><li><b>demo</b> : <mark><a href=\"javascript:void(0)\" onclick=\"select.setValue(['4','8']);\">click here</a></mark> add two new countries <mark><a href=\"#_demo\" id=\"maniDemo1\" onclick=\"gotoDemo(this.id)\">#gotoMultiselect</a></mark></li><li><b>code</b> : <code>select.setValue(['4','8']); //give select option values in array</code></li></ul></dd><dt><code>MSFmultiSelect.removeValue(removeSellectedValues)</code></dt><dd>This method used to remove selected values, this method needs one argument, that argument value has select option values in an array format.<ul><li><b>demo</b> : <mark><a href=\"javascript:void(0)\" onclick=\"select.removeValue(['4','8']);\">click here</a></mark> remove two new countries <mark><a href=\"#_demo\" id=\"maniDemo2\" onclick=\"gotoDemo(this.id)\">#gotoMultiselect</a></mark></li><li><b>code</b> : <code>select.removeValue(['4','8']); //give select option values in array</code></li></dd><dt><code>MSFmultiSelect.getData()</code></dt><dd>This methods use to get selected values of multiselect<ul><li><b>domo</b> : <mark><a href=\"javascript:void(0)\" onclick=\"console.log(select.getData());\">click here</a></mark> print to selectd value in console log</li><li><b>code</b> : <code> console.log(select.getData());</code></li></ul></dd><dt><code>MSFmultiSelect.selectAll(ctrlSwitch)</code></dt><dd>This method uses to select all option in the multiselect list or unselect all option in the list, this method needs one argument and its boolean value, if give true, select all option in multiselect list or you give false value unselect all in multiselect list.<ul><li><b>demo</b> : <mark><a href=\"javascript:void(0)\" onclick=\"select.selectAll(true);\">click here</a></mark> to select all option | <mark><a href=\"javascript:void(0)\" onclick=\"select.selectAll(false);\">click here</a></mark> to unselect all option <mark><a href=\"#_demo\" id=\"maniDemo3\" onclick=\"gotoDemo(this.id)\">#gotoMultiselect</a></mark></li><li><b>code</b> : <code> select.selectAll(true); select.selectAll(false);</code></li></ul></dd><dt><code>MSFmultiSelect.loadSource(options)</code></dt><dd>This method uses to load options in multiselect. This method needs one argument and its need array format.<ul><li><b>formet</b> : <pre class='sf-syntax'><code>var options=[\n {caption:'optiontext1',value:'optionvalue1',selected:true},\n {caption:'optiontext2',value:'optionvalue2',selected:false}\n];</code></pre></li></ul></dd><dt><code>MSFmultiSelect.getSource()</code></dt><dd>This method uses to get current source data, it will return the array format.<ul><li><b>demo </b> : <mark><a href=\"javascript:void(0)\" onclick=\"console.log(select.getSource());\">click here</a></mark> to print in console log</li><li><b>code</b> : <code> console.log(select.getSource());</code></li></ul></dd><dt><code>MSFmultiSelect.reload()</code></dt><dd>This method uses to recreate the multiselect.<ul><li><b>demo </b> : <mark><a href=\"javascript:void(0)\" onclick=\"select.reload();\">click here</a></mark> to reload  <mark><a href=\"#_demo\" id=\"maniDemo4\" onclick=\"gotoDemo(this.id)\">#gotoMultiselect</a></mark></li><li><b>code</b> : <code>select.reload();</code></li></ul></dd></dl>" },
            { "title":"Upcoming Update in MSFmultiSelect","type":"html","content":"<ul><li>Search and server-side search (ajax) option. Give your supports.</li></ul>" }
        ], 
        "gitScript":["https://raw.githubusercontent.com/ccampbell/rainbow/master/dist/rainbow.min.js","https://raw.githubusercontent.com/jagadeesanjd11/MSFmultiSelect/master/MSFmultiSelect.js"],"gitStyle":["https://raw.githubusercontent.com/ccampbell/rainbow/master/themes/css/monokai.css","https://raw.githubusercontent.com/jagadeesanjd11/MSFmultiSelect/master/MSFmultiSelect.css"]
     }
    ]
}
